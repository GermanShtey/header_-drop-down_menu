[{"/Users/german/dev/header_drop-down_menu/src/components/Header/Header.js":"1"},{"size":1784,"mtime":1610918878856,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"69izrh","/Users/german/dev/header_drop-down_menu/src/components/Header/Header.js",["7","8","9","10","11"],"import React, {useState} from \"react\";\nimport Logo from '../../images/logo.svg';\nimport './Header.css';\nimport {ReactComponent as Burger} from '../../images/burger.svg';\nimport {ReactComponent as Cross} from '../../images/close.svg';\n\nexport const Header = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return(\n    <header className=\"header\">\n\n      <div className=\"logo header__logo\">\n        <img src={Logo} className=\"logo__img\" alt=\"logo\" />\n        <p className=\"logo__title\">Веб-стандарты</p>\n        <p className=\"logo__tagline\">Сообщество разработчиков</p>\n      </div>\n\n      <nav className={'menu header__menu'}>\n\n        <button\n          className={'menu__button'}\n          aria-expanded={'false'}\n          aria-controls={'menu__list'}\n          onClick={() => setIsOpen(!isOpen)}\n        >{\n          isOpen\n          ? <Cross className={'menu__icon'}/>\n          : <Burger/>\n        }\n        </button>\n\n        <ul className={`menu__list ${isOpen && \"menu__list_open\"}`} id={'menu__list'}>\n          <li className=\"menu__item\">\n            <a href='#' className=\"menu__link menu__link_current\">Статьи</a>\n          </li>\n          <li className=\"menu__item\">\n            <a className=\"menu__link menu__link_inactive\">Подкаст</a>\n          </li>\n          <li className=\"menu__item\">\n            <a className=\"menu__link menu__link_inactive\">Календарь</a>\n          </li>\n          <li className=\"menu__item\">\n            <a className=\"menu__link menu__link_inactive\">О проекте</a>\n          </li>\n          <li className=\"menu__item\">\n            <a href=\"#\" className=\"menu__link menu__link_patron\">Поддержать</a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\n",{"ruleId":"12","severity":1,"message":"13","line":35,"column":13,"nodeType":"14","endLine":35,"endColumn":67},{"ruleId":"12","severity":1,"message":"15","line":38,"column":13,"nodeType":"14","endLine":38,"endColumn":59},{"ruleId":"12","severity":1,"message":"15","line":41,"column":13,"nodeType":"14","endLine":41,"endColumn":59},{"ruleId":"12","severity":1,"message":"15","line":44,"column":13,"nodeType":"14","endLine":44,"endColumn":59},{"ruleId":"12","severity":1,"message":"13","line":47,"column":13,"nodeType":"14","endLine":47,"endColumn":66},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md"]